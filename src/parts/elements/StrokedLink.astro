---

  const { href, name, className, underline } = Astro.props
  const spanClassName = className.split(' ').map((el, i) => {
    if(i === 0) el += '-span'
    return el
  }).join(' ')

---

<a class={className} data-prefetch href={href}>
  <span class={spanClassName} data-double={name}>{name}</span>
  <slot></slot>
  {
    underline && <svg><use xlink:href="#sprite-underline"></use></svg>
  }
</a>


<style lang="scss">

  span {
    position: relative;

    color: var(--color-2);
    transition: color 0.3s;
  }


  span::after {
    content: attr(data-double) " ";
    position: absolute;
    left: 0;
    top: 0;
    color: transparent;
    -webkit-text-stroke: 0.1rem var(--color-2);
    text-stroke: 0.1rem var(--color-2);
    opacity: 0;
    transition: opacity 0.3s;
  }



  svg {
    width: 100%;
    height: 3.25rem;
    stroke: var(--color-2);
    stroke-dasharray: 2178.047607421875;
    stroke-dashoffset: 2178.047607421875;
    pointer-events: none;
  }


  @supports(-webkit-text-stroke: 0.1rem white) {
    a:hover span {
      color: transparent;
    }

    a:hover span::after {
        opacity: 1;
    }
  }


  a:hover svg {
    animation: draw 0.3s forwards;
  }

</style>